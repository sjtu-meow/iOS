//
// Generated by CocoaPods-Keys
// on 28/06/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "MeowKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation MeowKeys

  @dynamic leanCloudAppId;
  @dynamic leanCloudClientKey;
  @dynamic qCloudCOSAppId;
  @dynamic qCloudCOSSecretId;
  @dynamic qCloudCOSSecretKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(MeowKeys *, SEL) = NULL;

  if ([key isEqualToString:@"leanCloudAppId"]) {
    implementation = _podKeysdeba09f9e3f81c6533a638efc9bb27ba;
  }

  if ([key isEqualToString:@"leanCloudClientKey"]) {
    implementation = _podKeys4e139fdec88dd5fc288e6b01d2cd53f6;
  }

  if ([key isEqualToString:@"qCloudCOSAppId"]) {
    implementation = _podKeys46720e4ba6388af75e100b3a0fe0099a;
  }

  if ([key isEqualToString:@"qCloudCOSSecretId"]) {
    implementation = _podKeys7108f4404f13bfc926a3320ea002d017;
  }

  if ([key isEqualToString:@"qCloudCOSSecretKey"]) {
    implementation = _podKeys28af2783dd2c62b3c52e2a65ddff72ac;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysdeba09f9e3f81c6533a638efc9bb27ba(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[34] = { MeowKeysData[556], MeowKeysData[3534], MeowKeysData[1505], MeowKeysData[1192], MeowKeysData[3267], MeowKeysData[2377], MeowKeysData[150], MeowKeysData[2799], MeowKeysData[4693], MeowKeysData[4168], MeowKeysData[1445], MeowKeysData[4172], MeowKeysData[2067], MeowKeysData[619], MeowKeysData[4592], MeowKeysData[128], MeowKeysData[4832], MeowKeysData[3300], MeowKeysData[3182], MeowKeysData[2331], MeowKeysData[1057], MeowKeysData[2965], MeowKeysData[1446], MeowKeysData[1515], MeowKeysData[4562], MeowKeysData[486], MeowKeysData[2858], MeowKeysData[4448], MeowKeysData[1900], MeowKeysData[331], MeowKeysData[3658], MeowKeysData[282], MeowKeysData[1041], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys4e139fdec88dd5fc288e6b01d2cd53f6(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[25] = { MeowKeysData[1191], MeowKeysData[3216], MeowKeysData[3031], MeowKeysData[77], MeowKeysData[497], MeowKeysData[4723], MeowKeysData[4095], MeowKeysData[1389], MeowKeysData[3076], MeowKeysData[3937], MeowKeysData[3679], MeowKeysData[604], MeowKeysData[4257], MeowKeysData[1201], MeowKeysData[397], MeowKeysData[1810], MeowKeysData[3625], MeowKeysData[2056], MeowKeysData[2474], MeowKeysData[107], MeowKeysData[3320], MeowKeysData[3989], MeowKeysData[4376], MeowKeysData[4016], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys46720e4ba6388af75e100b3a0fe0099a(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[11] = { MeowKeysData[250], MeowKeysData[4243], MeowKeysData[2823], MeowKeysData[4091], MeowKeysData[3903], MeowKeysData[555], MeowKeysData[3323], MeowKeysData[4961], MeowKeysData[1677], MeowKeysData[4898], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys7108f4404f13bfc926a3320ea002d017(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { MeowKeysData[1991], MeowKeysData[2071], MeowKeysData[542], MeowKeysData[4653], MeowKeysData[3984], MeowKeysData[914], MeowKeysData[3864], MeowKeysData[3329], MeowKeysData[4527], MeowKeysData[357], MeowKeysData[1675], MeowKeysData[1121], MeowKeysData[3446], MeowKeysData[890], MeowKeysData[5020], MeowKeysData[1557], MeowKeysData[1974], MeowKeysData[3705], MeowKeysData[932], MeowKeysData[1965], MeowKeysData[134], MeowKeysData[1586], MeowKeysData[4503], MeowKeysData[3849], MeowKeysData[3002], MeowKeysData[1126], MeowKeysData[798], MeowKeysData[2795], MeowKeysData[3689], MeowKeysData[4844], MeowKeysData[3682], MeowKeysData[25], MeowKeysData[105], MeowKeysData[3931], MeowKeysData[1603], MeowKeysData[4140], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28af2783dd2c62b3c52e2a65ddff72ac(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { MeowKeysData[122], MeowKeysData[2259], MeowKeysData[1254], MeowKeysData[869], MeowKeysData[4644], MeowKeysData[3356], MeowKeysData[52], MeowKeysData[3924], MeowKeysData[3266], MeowKeysData[3594], MeowKeysData[4814], MeowKeysData[678], MeowKeysData[3680], MeowKeysData[2244], MeowKeysData[292], MeowKeysData[3180], MeowKeysData[1873], MeowKeysData[1494], MeowKeysData[677], MeowKeysData[1841], MeowKeysData[139], MeowKeysData[3795], MeowKeysData[4534], MeowKeysData[2554], MeowKeysData[4686], MeowKeysData[1524], MeowKeysData[176], MeowKeysData[3467], MeowKeysData[2289], MeowKeysData[2763], MeowKeysData[1305], MeowKeysData[2035], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char MeowKeysData[5042] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"leanCloudAppId": self.leanCloudAppId,
            @"leanCloudClientKey": self.leanCloudClientKey,
            @"qCloudCOSAppId": self.qCloudCOSAppId,
            @"qCloudCOSSecretId": self.qCloudCOSSecretId,
            @"qCloudCOSSecretKey": self.qCloudCOSSecretKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
