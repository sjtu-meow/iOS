//
// Generated by CocoaPods-Keys
// on 02/07/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "MeowKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation MeowKeys

  @dynamic leanCloudAppId;
  @dynamic leanCloudClientKey;
  @dynamic qCloudCOSAppId;
  @dynamic qCloudCOSSecretId;
  @dynamic qCloudCOSSecretKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(MeowKeys *, SEL) = NULL;

  if ([key isEqualToString:@"leanCloudAppId"]) {
    implementation = _podKeysdeba09f9e3f81c6533a638efc9bb27ba;
  }

  if ([key isEqualToString:@"leanCloudClientKey"]) {
    implementation = _podKeys4e139fdec88dd5fc288e6b01d2cd53f6;
  }

  if ([key isEqualToString:@"qCloudCOSAppId"]) {
    implementation = _podKeys46720e4ba6388af75e100b3a0fe0099a;
  }

  if ([key isEqualToString:@"qCloudCOSSecretId"]) {
    implementation = _podKeys7108f4404f13bfc926a3320ea002d017;
  }

  if ([key isEqualToString:@"qCloudCOSSecretKey"]) {
    implementation = _podKeys28af2783dd2c62b3c52e2a65ddff72ac;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysdeba09f9e3f81c6533a638efc9bb27ba(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[34] = { MeowKeysData[1745], MeowKeysData[4238], MeowKeysData[373], MeowKeysData[4391], MeowKeysData[2328], MeowKeysData[3832], MeowKeysData[1239], MeowKeysData[2841], MeowKeysData[1206], MeowKeysData[1146], MeowKeysData[4317], MeowKeysData[700], MeowKeysData[2492], MeowKeysData[872], MeowKeysData[1713], MeowKeysData[4306], MeowKeysData[4261], MeowKeysData[2821], MeowKeysData[3907], MeowKeysData[760], MeowKeysData[1662], MeowKeysData[3145], MeowKeysData[3763], MeowKeysData[3950], MeowKeysData[1978], MeowKeysData[4623], MeowKeysData[3136], MeowKeysData[746], MeowKeysData[1535], MeowKeysData[3419], MeowKeysData[344], MeowKeysData[695], MeowKeysData[4194], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys4e139fdec88dd5fc288e6b01d2cd53f6(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[25] = { MeowKeysData[4109], MeowKeysData[3325], MeowKeysData[2596], MeowKeysData[58], MeowKeysData[1723], MeowKeysData[3000], MeowKeysData[4121], MeowKeysData[1458], MeowKeysData[1125], MeowKeysData[137], MeowKeysData[3033], MeowKeysData[1832], MeowKeysData[2011], MeowKeysData[4624], MeowKeysData[2249], MeowKeysData[3437], MeowKeysData[4655], MeowKeysData[3408], MeowKeysData[2983], MeowKeysData[2518], MeowKeysData[3154], MeowKeysData[2477], MeowKeysData[2629], MeowKeysData[2081], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys46720e4ba6388af75e100b3a0fe0099a(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[11] = { MeowKeysData[4103], MeowKeysData[161], MeowKeysData[1256], MeowKeysData[3528], MeowKeysData[686], MeowKeysData[553], MeowKeysData[3409], MeowKeysData[2119], MeowKeysData[3301], MeowKeysData[1172], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys7108f4404f13bfc926a3320ea002d017(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { MeowKeysData[2323], MeowKeysData[991], MeowKeysData[1162], MeowKeysData[583], MeowKeysData[1457], MeowKeysData[3541], MeowKeysData[4233], MeowKeysData[4581], MeowKeysData[3299], MeowKeysData[4397], MeowKeysData[4579], MeowKeysData[2717], MeowKeysData[624], MeowKeysData[2062], MeowKeysData[4316], MeowKeysData[4366], MeowKeysData[1480], MeowKeysData[1025], MeowKeysData[2759], MeowKeysData[4390], MeowKeysData[968], MeowKeysData[1328], MeowKeysData[2806], MeowKeysData[3963], MeowKeysData[2763], MeowKeysData[299], MeowKeysData[59], MeowKeysData[940], MeowKeysData[791], MeowKeysData[4591], MeowKeysData[3554], MeowKeysData[1234], MeowKeysData[1970], MeowKeysData[2210], MeowKeysData[1245], MeowKeysData[3666], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28af2783dd2c62b3c52e2a65ddff72ac(MeowKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { MeowKeysData[3672], MeowKeysData[3002], MeowKeysData[440], MeowKeysData[717], MeowKeysData[199], MeowKeysData[2019], MeowKeysData[2852], MeowKeysData[192], MeowKeysData[3610], MeowKeysData[893], MeowKeysData[473], MeowKeysData[3822], MeowKeysData[303], MeowKeysData[2880], MeowKeysData[295], MeowKeysData[4341], MeowKeysData[2976], MeowKeysData[3351], MeowKeysData[1211], MeowKeysData[2200], MeowKeysData[3596], MeowKeysData[3074], MeowKeysData[2563], MeowKeysData[2035], MeowKeysData[1182], MeowKeysData[581], MeowKeysData[4543], MeowKeysData[2137], MeowKeysData[3063], MeowKeysData[2567], MeowKeysData[89], MeowKeysData[1137], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char MeowKeysData[4682] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"leanCloudAppId": self.leanCloudAppId,
            @"leanCloudClientKey": self.leanCloudClientKey,
            @"qCloudCOSAppId": self.qCloudCOSAppId,
            @"qCloudCOSSecretId": self.qCloudCOSSecretId,
            @"qCloudCOSSecretKey": self.qCloudCOSSecretKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
